{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Nam Gi Min/Documents/GitHub/loltoday/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Nam Gi Min/Documents/GitHub/loltoday/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/Nam Gi Min/Documents/GitHub/loltoday/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{authService,firebaseService}from\"firebaseApp\";import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Auth=function Auth(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),Account=_useState6[0],setAccount=_useState6[1];var onChange=function onChange(e){var _e$target=e.target,id=_e$target.id,value=_e$target.value;if(id===\"email\"){setEmail(value);}else if(id===\"password\"){setPassword(value);}};var onClick=function onClick(e){var id=e.target.id;if(id===\"logIn\"){setAccount(true);}else if(id===\"createAccount\"){setAccount(false);}};var onClickGoogle=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var provider;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:provider=new firebaseService.auth.GoogleAuthProvider();_context.next=3;return authService.signInWithPopup(provider);case 3:case\"end\":return _context.stop();}}},_callee);}));return function onClickGoogle(){return _ref.apply(this,arguments);};}();var onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var errorCode,errorMessage;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0://async, await 안 써도 되는데?\ne.preventDefault();_context2.prev=1;if(!Account){_context2.next=7;break;}_context2.next=5;return authService.signInWithEmailAndPassword(email,password);case 5:_context2.next=9;break;case 7:_context2.next=9;return authService.createUserWithEmailAndPassword(email,password);case 9:_context2.next=16;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](1);errorCode=_context2.t0.code;errorMessage=_context2.t0.message;if(errorCode===\"auth/weak-password\"){alert(\"The password is too weak.\");}else{alert(errorMessage);}case 16:case\"end\":return _context2.stop();}}},_callee2,null,[[1,11]]);}));return function onSubmit(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/ (//enter 치면 앞의 submit 인 login 만 실행되네\n_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{id:\"email\",type:\"email\",placeholder:\"Input Email\",value:email,onChange:onChange,required:true}),/*#__PURE__*/_jsx(\"input\",{id:\"password\",type:\"password\",placeholder:\"Input Password\",value:password,onChange:onChange,required:true}),/*#__PURE__*/_jsx(\"input\",{id:\"logIn\",type:\"submit\",value:\"Log In\",onClick:onClick}),/*#__PURE__*/_jsx(\"input\",{id:\"createAccount\",type:\"submit\",value:\"Create Account\",onClick:onClick})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{id:\"google\",onClick:onClickGoogle,type:\"button\"//google button 눌렀을 때는 email 미입력 알람 안 뜬다\n,children:\"Continue with Google\"}),/*#__PURE__*/_jsx(\"button\",{disabled:true,id:\"kakao\",children:\"Continue with Kakao\"})]})]}));};export default Auth;","map":{"version":3,"sources":["C:/Users/Nam Gi Min/Documents/GitHub/loltoday/src/routes/Auth.js"],"names":["authService","firebaseService","React","useState","Auth","email","setEmail","password","setPassword","Account","setAccount","onChange","e","target","id","value","onClick","onClickGoogle","provider","auth","GoogleAuthProvider","signInWithPopup","onSubmit","preventDefault","signInWithEmailAndPassword","createUserWithEmailAndPassword","errorCode","code","errorMessage","message","alert"],"mappings":"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","sourcesContent":["import { authService, firebaseService } from \"firebaseApp\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [Account, setAccount] = useState(false);\r\n\r\n  const onChange = (e) => {\r\n    const { id, value } = e.target;\r\n    if (id === \"email\") {\r\n      setEmail(value);\r\n    } else if (id === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onClick = (e) => {\r\n    const { id } = e.target;\r\n    if (id === \"logIn\") {\r\n      setAccount(true);\r\n    } else if (id === \"createAccount\") {\r\n      setAccount(false);\r\n    }\r\n  };\r\n\r\n  const onClickGoogle = async () => {\r\n    const provider = new firebaseService.auth.GoogleAuthProvider();\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    //async, await 안 써도 되는데?\r\n    e.preventDefault();\r\n    try {\r\n      //try 안 해준 채로 error 나면, 계속 무한 반복!\r\n      if (Account) {\r\n        await authService.signInWithEmailAndPassword(email, password);\r\n      } else {\r\n        await authService.createUserWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      if (errorCode === \"auth/weak-password\") {\r\n        alert(\"The password is too weak.\");\r\n      } else {\r\n        alert(errorMessage);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    //enter 치면 앞의 submit 인 login 만 실행되네\r\n    <form onSubmit={onSubmit}>\r\n      <div>\r\n        <input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Input Email\"\r\n          value={email}\r\n          onChange={onChange}\r\n          required\r\n        ></input>\r\n        <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Input Password\"\r\n          value={password}\r\n          onChange={onChange}\r\n          required\r\n        ></input>\r\n        <input\r\n          id=\"logIn\"\r\n          type=\"submit\"\r\n          value=\"Log In\"\r\n          onClick={onClick}\r\n        ></input>\r\n        <input\r\n          id=\"createAccount\"\r\n          type=\"submit\"\r\n          value=\"Create Account\"\r\n          onClick={onClick}\r\n        ></input>\r\n      </div>\r\n      <div>\r\n        <button\r\n          id=\"google\"\r\n          onClick={onClickGoogle}\r\n          type=\"button\" //google button 눌렀을 때는 email 미입력 알람 안 뜬다\r\n        >\r\n          Continue with Google\r\n        </button>\r\n        <button disabled id=\"kakao\">\r\n          Continue with Kakao\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}